on:
  push:
  pull_request:
  merge_group:

name: CI
jobs:

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
        - '3.9'
        - '3.10'
        - '3.11'
        - '3.12'
        allow-failure:
        - false
        include:
        - python-version: '3.13-dev'
          allow-failure: true
    continue-on-error: ${{ matrix.allow-failure }}
    name: 'test (${{ matrix.python-version }})'
    steps:
    - name: Check out source code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Set up PDM
      uses: pdm-project/setup-pdm@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get update
        pip install codecov build
        pdm install --dev
    - name: Run tests
      run: |
        pdm run test
    - name: Submit code coverage
      run: |
        codecov

  build-release:
    name: Build wheels
    runs-on: ubuntu-latest
    environment: publish-release
    if: ${{ github.repository == 'MazinLab/binney' && github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v') && !contains(github.event.ref, 'dev') }}
    permissions:
      # This permission is needed for private repositories.
      contents: read
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    steps:
      - name: Check out source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up PDM
        uses: pdm-project/setup-pdm@v4
        with:
          python-version: '3.9'
      - uses: PyO3/maturin-action@v1
        with:
          manylinux: manylinux2014
          command: build
          args: --release --out dist
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist
      - name: Install built wheel
        run: pip install pybinney --no-index --find-links dist --force-reinstall
      - name: Test built wheel
        working-directory: /
        run: python -c "import binney"
      - name: Publish release
        run: |
          pdm publish --no-build -d dist --skip-existing
      - name: Build Documentation
        run: |
          pdm install -G polars --dev
          pdm document
      - name: Upload docs
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs

  deploy:
    needs: build-release
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
